workflows:
  react-native-android:
    name: React Native Android
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      vars:
        ANDROID_SDK_ROOT: "/Users/builder/programs/android-sdk"
    scripts:
      - name: Clean Workspace
        script: |
          rm -rf ~/.gradle/caches
          rm -rf android/.gradle
          rm -rf android/build
          rm -rf android/app/build

      - name: Install Required Tools
        script: |
          # تثبيت Java 17
          brew install openjdk@17
          sudo ln -sfn /usr/local/opt/openjdk@17/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-17.jdk
          export JAVA_HOME=/Library/Java/JavaVirtualMachines/openjdk-17.jdk/Contents/Home
          
          # تثبيت Node.js 18
          curl -o node-v18.20.2.pkg https://nodejs.org/dist/v18.20.2/node-v18.20.2.pkg
          sudo installer -pkg node-v18.20.2.pkg -target /
          export PATH="/usr/local/bin:$PATH"
          
          # تثبيت Android Command Line Tools
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          curl -L https://dl.google.com/android/repository/commandlinetools-mac-9477386_latest.zip -o cmdline-tools.zip
          unzip -q cmdline-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
          rm cmdline-tools.zip
          
          # قبول التراخيص
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
          
          # تثبيت Android SDK
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platforms;android-33" "build-tools;33.0.0" "platform-tools"

      - name: Create Android Project
        script: |
          if [ ! -d "android" ]; then
            echo "Creating Android project from template..."
            
            # إنشاء هيكل مشروع Android باستخدام npx
            npx react-native init MyApp --template react-native-template-typescript
            
            # نسخ مجلد android من المشروع الجديد
            cp -R MyApp/android .
            rm -rf MyApp
            
            # تحديث ملفات التكوين
            echo "sdk.dir=$ANDROID_SDK_ROOT" > android/local.properties
            echo "include ':app'" > android/settings.gradle
          fi

      - name: Install Project Dependencies
        script: |
          npm install --legacy-peer-deps
          
          # إعداد Android SDK
          echo "sdk.dir=$ANDROID_SDK_ROOT" > android/local.properties

      - name: Build Android APK
        script: |
          cd android
          
          # استخدام Gradle مع إعدادات محددة
          ./gradlew clean assembleDebug \
            --no-daemon \
            --stacktrace \
            -Dorg.gradle.java.home=$JAVA_HOME \
            -Dorg.gradle.daemon=false \
            -Dorg.gradle.parallel=true
          
          # التحقق من وجود APK
          if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
            echo "APK built successfully! File size: $(du -h app/build/outputs/apk/debug/app-debug.apk | cut -f1)"
          else
            echo "APK not found! Build may have failed."
            echo "Build output contents:"
            ls -la app/build/outputs/apk/debug/
            exit 1
          fi

      - name: Upload APK
        script: |
          APK_PATH="android/app/build/outputs/apk/debug/app-debug.apk"
          
          if [ -f "$APK_PATH" ]; then
            echo "Uploading APK to filebin.net..."
            DOWNLOAD_URL=$(curl -X POST -T "$APK_PATH" "https://filebin.net/?filename=telon-gateway-app.apk" | grep -o 'https://filebin.net/[^"]*')
            echo "Download URL: $DOWNLOAD_URL"
          else
            echo "APK file not found for upload"
            exit 1
          fi
    artifacts:
      - android/app/build/outputs/apk/debug/*.apk
